{"version":3,"sources":["../../src/WebSerialContext.js","../../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../../src/webSerialIo.js","../../src/WebSerialProvider.js","WebSerialButtons.js","WebSerialTerminal.js","../../src/useWebSerial.js","App.js","index.js"],"names":["WebSerialContext","createContext","_Pact","prototype","then","onFulfilled","onRejected","result","state","this","s","callback","_settle","v","e","o","_this","value","pact","bind","observer","_isSettledPact","thenable","Symbol","iterator","asyncIterator","_for","test","update","body","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","_catch","recover","port","reader","_onOpen","console","log","_onClose","_onMessage","msg","_onError","markDisconnected","undefined","openPort","requestPortFilters","openOptions","filters","navigator","serial","requestPort","tmpPort","options","baudRate","dataBits","stopBits","parity","bufferSize","flowControl","open","close","_port","readable","releaseLock","getReader","read","done","_interrupt","_interrupt2","closePort","localPort","cancel","sendMessage","message","_port2","writable","writer","getWriter","write","Error","updateCallbacks","onOpen","onClose","onMessage","onError","webSerialIo","WebSerialProvider","children","parserMethod","React","Provider","OpenCloseButton","serialAvailable","isConnected","disabled","onClick","a","SendButton","cmdStr","dispStr","TextEncoder","encode","WebSerialButtons","Xterm","loadable","WebSerialTerminal","useContext","useWebSerial","useCallback","useState","setSerialAvailable","setIsConnected","useEffect","encoder","decoded","TextDecoder","decode","setTerminalMessage","Date","toLocaleString","terminalMessage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5f5248c.chunk.js","sourcesContent":["// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { createContext } from 'react'\n\nconst WebSerialContext = createContext()\n\nexport default WebSerialContext\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nconst webSerialIo = (() => {\n  let port\n  let reader\n  return () => {\n    let _onOpen = () => {\n      console.log('OnOpen()')\n    }\n    let _onClose = () => {\n      console.log('OnClose()')\n    }\n    let _onMessage = (msg) => {\n      console.log('OnMessage(', msg, ')')\n    }\n    let _onError = (e) => {\n      console.log(e)\n    }\n\n    console.log('webSerialIo() is called')\n\n    const updateCallbacks = ({ onOpen, onClose, onMessage, onError }) => {\n      if (onOpen) {\n        _onOpen = onOpen\n      }\n      if (onClose) {\n        _onClose = onClose\n      }\n      if (onMessage) {\n        _onMessage = onMessage\n      }\n      if (onError) {\n        _onError = onError\n      }\n    }\n\n    const markDisconnected = () => {\n      //        console.log('markDisconnected is called');\n      port = undefined\n      _onClose()\n    }\n\n    // type openPort = (port: SerialPort, options: SerialOptions) => Promise<void>;\n    const openPort = async (requestPortFilters, openOptions) => {\n      // requestPortFilters may like this [{usbVendorId:0x2341, usbProductId:0x8054}]\n      // default value, [] accepts all vid/pid.\n      const filters = requestPortFilters || []\n      try {\n        const tmpPort = await navigator.serial.requestPort({\n          filters: filters\n        })\n        const options = openOptions || {\n          baudRate: 115200,\n          dataBits: 8,\n          stopBits: 1,\n          parity: 'none',\n          bufferSize: 255,\n          flowControl: 'none'\n        }\n        try {\n          await tmpPort.open(options)\n          port = tmpPort\n          _onOpen()\n\n          while (port?.readable) {\n            try {\n              reader = port.readable.getReader()\n              for (;;) {\n                //                    console.log('before reader.current.read()');\n                const { value, done } = await reader.read()\n                //                    console.log('return from reader.current.read()');\n                if (value) {\n                  _onMessage(value)\n                }\n                if (done) {\n                  break\n                }\n              }\n              reader.releaseLock()\n              reader = undefined\n            } catch (e) {\n              _onError(e)\n              break\n            }\n          }\n          if (port) {\n            try {\n              await port.close()\n              markDisconnected()\n            } catch (e) {\n              _onError(e)\n            }\n          }\n        } catch (e) {\n          _onError(e)\n        }\n      } catch (e) {\n        _onError(e)\n      }\n    }\n\n    // type closePort = (void) => Promise<void>;\n    const closePort = async () => {\n      const localPort = port\n      port = undefined\n      if (reader) {\n        await reader.cancel()\n      }\n\n      if (localPort) {\n        try {\n          await localPort.close()\n          markDisconnected()\n        } catch (e) {\n          _onError(e)\n        }\n      }\n    }\n\n    // type sendMessage(message: Uint8Array) => void;\n    const sendMessage = (message) => {\n      if (port?.writable) {\n        try {\n          const writer = port.writable.getWriter()\n          writer.write(message)\n          writer.releaseLock()\n        } catch (e) {\n          _onError(e)\n        }\n      } else {\n        _onError(new Error(\"Can't send message, serial pot may not open.\"))\n      }\n    }\n\n    return {\n      openPort,\n      closePort,\n      sendMessage,\n      updateCallbacks\n    }\n  }\n})()\n\nexport default webSerialIo\n","// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport React from 'react'\nimport webSerialIo from './webSerialIo'\nimport WebSerialContext from './WebSerialContext'\n\nconst { openPort, closePort, sendMessage, updateCallbacks } = webSerialIo()\n\nconst WebSerialProvider = ({ children, options = {}, parserMethod }) => {\n  return (\n    <WebSerialContext.Provider\n      value={{\n        openPort,\n        closePort,\n        sendMessage,\n        parserMethod,\n        updateCallbacks\n      }}\n    >\n      {children}\n    </WebSerialContext.Provider>\n  )\n}\nexport default WebSerialProvider\n","// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n// \n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport React from 'react'\n\nconst OpenCloseButton = ({\n    serialAvailable,\n    isConnected,\n    openPort,\n    closePort,\n    onError,\n    requestPortFilters,\n    openOptions\n}) => {\n    return (\n        <button \n        disabled={!serialAvailable}       \n        onClick={\n            async ()=>{\n                if (isConnected) {\n                    try{\n                        await closePort();\n                    } catch (e) {\n                        onError(e);\n                    }\n                } else {\n                    try {\n                        openPort(requestPortFilters, openOptions);\n                    } catch (e) {\n                        // for example, \"NotFoundError: No port selected by the user.\" if user select cancel.\n                        onError(e);\n                    }        \n                }\n            }\n        }\n        >{isConnected?\"CLOSE\":\"OPEN\"}</button>\n    );\n}\n\nconst SendButton = ({\n    disabled,\n    sendMessage,\n    cmdStr,\n    dispStr\n}) => {\n    return (\n        <button \n        disabled={disabled}\n        onClick={()=>{\n            sendMessage((new TextEncoder()).encode(cmdStr + \"\\r\\n\"))\n        }}\n        >{dispStr}</button>\n    )\n}\n\n\nconst WebSerialButtons = ({\n    serialAvailable,\n    isConnected,\n    openPort,\n    closePort,\n    onError,\n    sendMessage,\n})=>{\n    return (\n        <>\n        <OpenCloseButton\n            serialAvailable = {serialAvailable}\n            isConnected = {isConnected}\n            openPort = {openPort}\n            closePort = {closePort}\n            onError = {onError}\n        >\n        </OpenCloseButton>\n        <SendButton\n            disabled = {!serialAvailable || !isConnected}\n            sendMessage = {sendMessage}\n            cmdStr = {\"< TEST RSP 1000\"}\n            dispStr = {\"1000sec\"}\n        ></SendButton>\n        <SendButton\n            disabled = {!serialAvailable || !isConnected}\n            sendMessage = {sendMessage}\n            cmdStr = {\"< TEST RSP 500\"}\n            dispStr = {\"500sec\"}\n        ></SendButton>\n        <SendButton\n            disabled = {!serialAvailable || !isConnected}\n            sendMessage = {sendMessage}\n            cmdStr = {\"< TEST RSP 100\"}\n            dispStr = {\"100sec\"}\n        ></SendButton>\n        </>        \n    );\n}\n\nexport default WebSerialButtons;\n","// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n// \n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport React, {useCallback, useState, useEffect} from 'react'\n\nimport { useWebSerial } from 'use-react-webserial'\nimport WebSerialButtons from './WebSerialButtons'\n\nimport loadable from '@loadable/component'\nconst Xterm = loadable(() => import('./xterm.js'));\n\n\nconst WebSerialTerminal = () => {\n    const {openPort,closePort,sendMessage,updateCallbacks} = useWebSerial();\n    const onError = useCallback(\n        (e) => {console.log(e)},[]\n    );\n    const [serialAvailable, setSerialAvailable] = useState(true);\n    const [isConnected, setIsConnected] = useState(false);\n    useEffect(()=>{\n        updateCallbacks({\n            onOpen:()=>{\n                console.log(\"onOpen()\");\n                setIsConnected(true);\n                const encoder = new TextEncoder();\n            \n                sendMessage(encoder.encode(\"< TEST EVT 0,100,10\\r\\n\"));\n            },\n            onClose:()=>{\n                console.log(\"onClose()\");\n                setIsConnected(false);\n            },\n            onMessage:(msg)=>{\n                const decoder = new TextDecoder();\n                const decoded = decoder.decode(msg)\n                console.log(decoded);\n                setTerminalMessage((new Date()).toLocaleString() + \":\" + decoded);\n            },\n            onError:onError\n        });\n        setSerialAvailable(\"serial\" in navigator)\n    },[updateCallbacks, onError, sendMessage]);\n\n    const [terminalMessage, setTerminalMessage] = useState(\"\");\n    useEffect(()=>{\n        setTerminalMessage(\"Start at \" + (new Date()).toLocaleString());\n        return ()=>{\n            setTerminalMessage(\"End at \" + (new Date()).toLocaleString()); // this may mot displaied.\n        }\n    },[]);\n\n    return (\n    <>\n        <WebSerialButtons\n            serialAvailable = {serialAvailable}\n            isConnected = {isConnected}\n            openPort = {openPort}\n            closePort = {closePort}\n            onError = {onError}\n            sendMessage = {sendMessage}\n        >\n        </WebSerialButtons>\n        <Xterm\n            message = {terminalMessage}\n        />\n    </>    \n  )\n}\n\nexport default WebSerialTerminal;\n\n\n","// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { useContext } from 'react'\n\nimport WebSerialContext from './WebSerialContext'\n\nconst useWebSerial = () => {\n  const { openPort, closePort, sendMessage, parserMethod, updateCallbacks } =\n    useContext(WebSerialContext)\n\n  return {\n    openPort,\n    closePort,\n    sendMessage,\n    parserMethod,\n    updateCallbacks\n  }\n}\nexport default useWebSerial\n","// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n// \n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport React from 'react'\nimport { WebSerialProvider } from 'use-react-webserial'\nimport WebSerialTerminal from './WebSerialTerminal'\n\nconst App = () => {\n  return (\n    <WebSerialProvider>\n      <WebSerialTerminal/>\n    </WebSerialProvider>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}