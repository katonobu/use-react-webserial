{"version":3,"sources":["../../src/WebSerialContext.js","../../src/WebSerialProvider.js","../../src/webSerialIo.js","WebSerialButtons.js","WebSerialTerminal.js","../../src/useWebSerial.js","App.js","index.js"],"names":["WebSerialContext","createContext","port","reader","_onOpen","console","log","_onClose","_onMessage","msg","_onError","e","markDisconnected","undefined","openPort","requestPortFilters","openOptions","a","filters","navigator","serial","requestPort","tmpPort","options","baudRate","dataBits","stopBits","parity","bufferSize","flowControl","open","_port","readable","getReader","read","value","done","releaseLock","close","closePort","localPort","cancel","sendMessage","message","_port2","writable","writer","getWriter","write","Error","updateCallbacks","onOpen","onClose","onMessage","onError","webSerialIo","WebSerialProvider","children","parserMethod","React","Provider","OpenCloseButton","serialAvailable","isConnected","disabled","onClick","SendButton","cmdStr","dispStr","TextEncoder","encode","WebSerialButtons","Xterm","loadable","WebSerialTerminal","useContext","useWebSerial","useCallback","useState","setSerialAvailable","setIsConnected","useEffect","encoder","decoded","TextDecoder","decode","setTerminalMessage","Date","toLocaleString","terminalMessage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33afb481.chunk.js","sourcesContent":["// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { createContext } from 'react'\n\nconst WebSerialContext = createContext()\n\nexport default WebSerialContext\n","// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport React from 'react'\nimport webSerialIo from './webSerialIo'\nimport WebSerialContext from './WebSerialContext'\n\nconst { openPort, closePort, sendMessage, updateCallbacks } = webSerialIo()\n\nconst WebSerialProvider = ({ children, options = {}, parserMethod }) => {\n  return (\n    <WebSerialContext.Provider\n      value={{\n        openPort,\n        closePort,\n        sendMessage,\n        parserMethod,\n        updateCallbacks\n      }}\n    >\n      {children}\n    </WebSerialContext.Provider>\n  )\n}\nexport default WebSerialProvider\n","// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nconst webSerialIo = (() => {\n  let port\n  let reader\n  return () => {\n    let _onOpen = () => {\n      console.log('OnOpen()')\n    }\n    let _onClose = () => {\n      console.log('OnClose()')\n    }\n    let _onMessage = (msg) => {\n      console.log('OnMessage(', msg, ')')\n    }\n    let _onError = (e) => {\n      console.log(e)\n    }\n\n    console.log('webSerialIo() is called')\n\n    const updateCallbacks = ({ onOpen, onClose, onMessage, onError }) => {\n      if (onOpen) {\n        _onOpen = onOpen\n      }\n      if (onClose) {\n        _onClose = onClose\n      }\n      if (onMessage) {\n        _onMessage = onMessage\n      }\n      if (onError) {\n        _onError = onError\n      }\n    }\n\n    const markDisconnected = () => {\n      //        console.log('markDisconnected is called');\n      port = undefined\n      _onClose()\n    }\n\n    // type openPort = (port: SerialPort, options: SerialOptions) => Promise<void>;\n    const openPort = async (requestPortFilters, openOptions) => {\n      // requestPortFilters may like this [{usbVendorId:0x2341, usbProductId:0x8054}]\n      // default value, [] accepts all vid/pid.\n      const filters = requestPortFilters || []\n      try {\n        const tmpPort = await navigator.serial.requestPort({\n          filters: filters\n        })\n        const options = openOptions || {\n          baudRate: 115200,\n          dataBits: 8,\n          stopBits: 1,\n          parity: 'none',\n          bufferSize: 255,\n          flowControl: 'none'\n        }\n        try {\n          await tmpPort.open(options)\n          port = tmpPort\n          _onOpen()\n\n          while (port?.readable) {\n            try {\n              reader = port.readable.getReader()\n              for (;;) {\n                //                    console.log('before reader.current.read()');\n                const { value, done } = await reader.read()\n                //                    console.log('return from reader.current.read()');\n                if (value) {\n                  _onMessage(value)\n                }\n                if (done) {\n                  break\n                }\n              }\n              reader.releaseLock()\n              reader = undefined\n            } catch (e) {\n              _onError(e)\n              break\n            }\n          }\n          if (port) {\n            try {\n              await port.close()\n              markDisconnected()\n            } catch (e) {\n              _onError(e)\n            }\n          }\n        } catch (e) {\n          _onError(e)\n        }\n      } catch (e) {\n        _onError(e)\n      }\n    }\n\n    // type closePort = (void) => Promise<void>;\n    const closePort = async () => {\n      const localPort = port\n      port = undefined\n      if (reader) {\n        await reader.cancel()\n      }\n\n      if (localPort) {\n        try {\n          await localPort.close()\n          markDisconnected()\n        } catch (e) {\n          _onError(e)\n        }\n      }\n    }\n\n    // type sendMessage(message: Uint8Array) => void;\n    const sendMessage = (message) => {\n      if (port?.writable) {\n        try {\n          const writer = port.writable.getWriter()\n          writer.write(message)\n          writer.releaseLock()\n        } catch (e) {\n          _onError(e)\n        }\n      } else {\n        _onError(new Error(\"Can't send message, serial pot may not open.\"))\n      }\n    }\n\n    return {\n      openPort,\n      closePort,\n      sendMessage,\n      updateCallbacks\n    }\n  }\n})()\n\nexport default webSerialIo\n","// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n// \n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport React from 'react'\n\nconst OpenCloseButton = ({\n    serialAvailable,\n    isConnected,\n    openPort,\n    closePort,\n    onError,\n    requestPortFilters,\n    openOptions\n}) => {\n    return (\n        <button \n        disabled={!serialAvailable}       \n        onClick={\n            async ()=>{\n                if (isConnected) {\n                    try{\n                        await closePort();\n                    } catch (e) {\n                        onError(e);\n                    }\n                } else {\n                    try {\n                        openPort(requestPortFilters, openOptions);\n                    } catch (e) {\n                        // for example, \"NotFoundError: No port selected by the user.\" if user select cancel.\n                        onError(e);\n                    }        \n                }\n            }\n        }\n        >{isConnected?\"CLOSE\":\"OPEN\"}</button>\n    );\n}\n\nconst SendButton = ({\n    disabled,\n    sendMessage,\n    cmdStr,\n    dispStr\n}) => {\n    return (\n        <button \n        disabled={disabled}\n        onClick={()=>{\n            sendMessage((new TextEncoder()).encode(cmdStr + \"\\r\\n\"))\n        }}\n        >{dispStr}</button>\n    )\n}\n\n\nconst WebSerialButtons = ({\n    serialAvailable,\n    isConnected,\n    openPort,\n    closePort,\n    onError,\n    sendMessage,\n})=>{\n    return (\n        <>\n        <OpenCloseButton\n            serialAvailable = {serialAvailable}\n            isConnected = {isConnected}\n            openPort = {openPort}\n            closePort = {closePort}\n            onError = {onError}\n        >\n        </OpenCloseButton>\n        <SendButton\n            disabled = {!serialAvailable || !isConnected}\n            sendMessage = {sendMessage}\n            cmdStr = {\"< TEST RSP 1000\"}\n            dispStr = {\"1000sec\"}\n        ></SendButton>\n        <SendButton\n            disabled = {!serialAvailable || !isConnected}\n            sendMessage = {sendMessage}\n            cmdStr = {\"< TEST RSP 500\"}\n            dispStr = {\"500sec\"}\n        ></SendButton>\n        <SendButton\n            disabled = {!serialAvailable || !isConnected}\n            sendMessage = {sendMessage}\n            cmdStr = {\"< TEST RSP 100\"}\n            dispStr = {\"100sec\"}\n        ></SendButton>\n        </>        \n    );\n}\n\nexport default WebSerialButtons;\n","// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n// \n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport React, {useCallback, useState, useEffect} from 'react'\n\nimport { useWebSerial } from 'use-react-webserial'\nimport WebSerialButtons from './WebSerialButtons'\n\nimport loadable from '@loadable/component'\nconst Xterm = loadable(() => import('./xterm.js'));\n\n\nconst WebSerialTerminal = () => {\n    const {openPort,closePort,sendMessage,updateCallbacks} = useWebSerial();\n    const onError = useCallback(\n        (e) => {console.log(e)},[]\n    );\n    const [serialAvailable, setSerialAvailable] = useState(true);\n    const [isConnected, setIsConnected] = useState(false);\n    useEffect(()=>{\n        updateCallbacks({\n            onOpen:()=>{\n                console.log(\"onOpen()\");\n                setIsConnected(true);\n                const encoder = new TextEncoder();\n            \n                sendMessage(encoder.encode(\"< TEST EVT 0,100,10\\r\\n\"));\n            },\n            onClose:()=>{\n                console.log(\"onClose()\");\n                setIsConnected(false);\n            },\n            onMessage:(msg)=>{\n                const decoder = new TextDecoder();\n                const decoded = decoder.decode(msg)\n                console.log(decoded);\n                setTerminalMessage((new Date()).toLocaleString() + \":\" + decoded);\n            },\n            onError:onError\n        });\n        setSerialAvailable(\"serial\" in navigator)\n    },[updateCallbacks, onError, sendMessage]);\n\n    const [terminalMessage, setTerminalMessage] = useState(\"\");\n    useEffect(()=>{\n        setTerminalMessage(\"Start at \" + (new Date()).toLocaleString());\n        return ()=>{\n            setTerminalMessage(\"End at \" + (new Date()).toLocaleString()); // this may mot displaied.\n        }\n    },[]);\n\n    return (\n    <>\n        <WebSerialButtons\n            serialAvailable = {serialAvailable}\n            isConnected = {isConnected}\n            openPort = {openPort}\n            closePort = {closePort}\n            onError = {onError}\n            sendMessage = {sendMessage}\n        >\n        </WebSerialButtons>\n        <Xterm\n            message = {terminalMessage}\n        />\n    </>    \n  )\n}\n\nexport default WebSerialTerminal;\n\n\n","// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { useContext } from 'react'\n\nimport WebSerialContext from './WebSerialContext'\n\nconst useWebSerial = () => {\n  const { openPort, closePort, sendMessage, parserMethod, updateCallbacks } =\n    useContext(WebSerialContext)\n\n  return {\n    openPort,\n    closePort,\n    sendMessage,\n    parserMethod,\n    updateCallbacks\n  }\n}\nexport default useWebSerial\n","// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n// \n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport React from 'react'\nimport { WebSerialProvider } from 'use-react-webserial'\nimport WebSerialTerminal from './WebSerialTerminal'\n\nconst App = () => {\n  return (\n    <WebSerialProvider>\n      <WebSerialTerminal/>\n    </WebSerialProvider>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}