{"version":3,"sources":["xterm.js"],"names":["LoadedXterm","message","xtermRef","useRef","encoder","TextEncoder","useEffect","console","log","current","terminal","writeln","toBlue","ref","options","theme","background","blue","red","green","onData","data","writeUtf8","encode"],"mappings":"iJAAA,mCAwEeA,UAnCM,YAAoB,IAAVC,EAAS,EAATA,QACrBC,EAAWC,iBAAO,MAClBC,EAAUD,iBAAO,IAAIE,aAW3B,OAVAC,qBAAU,WAEN,OADAC,QAAQC,IAAI,iBACL,WACHD,QAAQC,IAAI,sBAElB,IACFF,qBAAU,WACNJ,EAASO,QAAQC,SAASC,QAAQC,aApBxB,WAoByDX,EAAjCW,gBACpC,CAACX,IAGC,kBAAC,IAAD,CACIY,IAAKX,EACLY,QAAS,CACLC,MAAO,CACHC,WAAY,UACZC,KAAM,UACNC,IAAM,UACNC,MAAM,YAGdC,OACI,SAACC,GAEGnB,EAASO,QAAQC,SAASY,UAAUlB,EAAQK,QAAQc,OAAOF,IAC3Dd,QAAQC,IAAI,iBAAkBa","file":"static/js/3.996ea8da.chunk.js","sourcesContent":["// MIT License\n//\n// Copyright (c) 2021-2022 Nobuo Kato (katonobu4649@gmail.com)\n// \n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport React, {useRef, useEffect} from 'react'\nimport {XTerm} from 'xterm-for-react'\n\n//const toBlack   = \"\\x1b[30m\"\n//const toRed     = \"\\x1b[31m\"\nconst toGreen   = \"\\x1b[32m\"\n//const toYellow  = \"\\x1b[33m\"\nconst toBlue    = \"\\x1b[34m\"\n//const toMagenta = \"\\x1b[35m\"\n//const toCyan    = \"\\x1b[36m\"\n//const toWhite   = \"\\x1b[37m\"\n//const toDefault = \"\\x1b[0m\"\n\nconst textColor_serial = (str)=>toGreen+str+toBlue\n\nconst LoadedXterm  = function({message}){\n    const xtermRef = useRef(null);\n    const encoder = useRef(new TextEncoder());\n    useEffect(()=>{\n        console.log(\"Xterm:Mounted\");\n        return ()=>{\n            console.log(\"Xterm:Unmounted\");\n        }\n    },[]);\n    useEffect(()=>{\n        xtermRef.current.terminal.writeln(toBlue + \"\\\"\" + textColor_serial(message)+ \"\\\"\");\n    },[message])\n\n    return (\n        <XTerm\n            ref={xtermRef}\n            options={{\n                theme: {\n                    background: '#fdf6e3',\n                    blue: '#3498db',\n                    red:  '#a40000',\n                    green:'#19857b'\n                }\n            }}\n            onData={\n                (data) => {\n                    // local echo\n                    xtermRef.current.terminal.writeUtf8(encoder.current.encode(data));\n                    console.log(\"from terminal:\", data);\n                }                    \n            }\n        />\n    )\n}\n\nexport default LoadedXterm;\n"],"sourceRoot":""}